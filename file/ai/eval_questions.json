[
  {
    "id": "q1",
    "query": "TensorFlow Lite 主要面向哪三类设备进行模型部署？",
    "answer": "移动设备（Android、iOS）、嵌入式设备以及微控制器（MCU）"
  },
  {
    "id": "q2",
    "query": "全球约有多少台设备部署了 TensorFlow Lite？",
    "answer": "超过 40 亿台设备"
  },
  {
    "id": "q3",
    "query": "示例花卉分类项目优化并部署的核心模型是什么？",
    "answer": "MobileNet（MobileNet V2）"
  },
  {
    "id": "q4",
    "query": "TensorFlow Lite 的两大核心组件是什么？",
    "answer": "Converter（转换器）和 Interpreter（解释器）"
  },
  {
    "id": "q5",
    "query": "TensorFlow Lite 使用哪种序列化格式存储模型文件？",
    "answer": "FlatBuffers"
  },
  {
    "id": "q6",
    "query": "Google 在 2017 年底发布了哪款专为移动端设计的深度学习工具？",
    "answer": "TensorFlow Lite"
  },
  {
    "id": "q7",
    "query": "TensorFlow Lite 典型 ARM 32 位构建的二进制大小约为多少？",
    "answer": "约 1 MB（仅常用算子时小于 300 KB）"
  },
  {
    "id": "q8",
    "query": "TensorFlow Lite 可以利用 Android 系统提供的哪项 API 进行硬件加速？",
    "answer": "Android NN API（Android 神经网络 API）"
  },
  {
    "id": "q9",
    "query": "TensorFlow Lite 模型转换的命令行工具名称是什么？",
    "answer": "tflite_convert"
  },
  {
    "id": "q10",
    "query": "在 Python 中将 SavedModel 转换为 TFLite 模型应使用哪个类？",
    "answer": "tf.lite.TFLiteConverter"
  },
  {
    "id": "q11",
    "query": "TensorFlow Lite 的 GPU 委托在 Java 侧创建时使用的类名是什么？",
    "answer": "GpuDelegate"
  },
  {
    "id": "q12",
    "query": "TensorFlow Lite 量化（quantization）主要带来哪两方面的好处？",
    "answer": "减少模型大小和提升推理性能"
  },
  {
    "id": "q13",
    "query": "示例中使用 ImageDataGenerator 加载数据时将 validation_split 设置为多少？",
    "answer": "0.2（20% 用于验证集）"
  },
  {
    "id": "q14",
    "query": "在花卉识别示例中输入图像被缩放到的尺寸是多少？",
    "answer": "224×224"
  },
  {
    "id": "q15",
    "query": "该花卉识别应用最终需要识别多少种花？",
    "answer": "四种花"
  },
  {
    "id": "q16",
    "query": "Keras ImageDataGenerator 中用于按文件夹加载图像的函数是什么？",
    "answer": "flow_from_directory"
  },
  {
    "id": "q17",
    "query": "示例中训练时的 batch_size 被设置为多少？",
    "answer": "64"
  },
  {
    "id": "q18",
    "query": "TensorFlow Lite 模型文件的默认扩展名是什么？",
    "answer": ".tflite"
  },
  {
    "id": "q19",
    "query": "Python 示例中使用哪行代码将量化优化应用于转换器？",
    "answer": "converter.optimizations = [tf.lite.Optimize.OPTIMIZE_FOR_SIZE]"
  },
  {
    "id": "q20",
    "query": "描述 TensorFlow Lite 模型格式的 schema 文件名是什么？",
    "answer": "schema.fbs"
  },
  {
    "id": "q21",
    "query": "TensorFlow Lite 项目的技能目标中提到需要熟练使用哪款 IDE？",
    "answer": "Android Studio"
  },
  {
    "id": "q22",
    "query": "TensorFlow 生态中用于高性能服务器端部署的平台叫什么？",
    "answer": "TensorFlow Serving"
  },
  {
    "id": "q23",
    "query": "哪家公司被提及使用 TensorFlow Lite 进行 OCR 处理？",
    "answer": "网易"
  },
  {
    "id": "q24",
    "query": "在 32 位安卓平台，仅核心运行时代码大小约为多少 KB？",
    "answer": "约 100 KB"
  },
  {
    "id": "q25",
    "query": "TensorFlow Lite 工作流程的第四步强调了哪项操作？",
    "answer": "优化模型（size/performance trade-off）"
  },
  {
    "id": "q26",
    "query": "训练集包含多少张花卉图片？",
    "answer": "2939 张"
  },
  {
    "id": "q27",
    "query": "验证集包含多少张花卉图片？",
    "answer": "731 张"
  },
  {
    "id": "q28",
    "query": "示例代码中保存类别标签的文件名是什么？",
    "answer": "labels.txt"
  },
  {
    "id": "q29",
    "query": "MobileNet V2 基础模型的输入形状 IMG_SHAPE 被设置为多少？",
    "answer": "(224, 224, 3)"
  },
  {
    "id": "q30",
    "query": "为何在实例化 MobileNet V2 时将 include_top 参数设为 False？",
    "answer": "去除原有 1000 类分类头，以便添加自定义输出层"
  },
  {
    "id": "q31",
    "query": "将 base_model.trainable 设为 False 的目的是什么？",
    "answer": "冻结预训练权重，避免在初始训练阶段被更新"
  },
  {
    "id": "q32",
    "query": "自定义网络最后一层使用的激活函数是什么？",
    "answer": "softmax"
  },
  {
    "id": "q33",
    "query": "初始训练阶段采用的优化器是哪一个？",
    "answer": "Adam"
  },
  {
    "id": "q34",
    "query": "模型中不可训练参数（Non-trainable params）的数量是多少？",
    "answer": "2,257,984"
  },
  {
    "id": "q35",
    "query": "微调 (fine-tuning) 时从第几层开始解冻？",
    "answer": "第 100 层 (fine_tune_at = 100) 之后"
  },
  {
    "id": "q36",
    "query": "MobileNet V2 基础模型总层数是多少？",
    "answer": "155 层"
  },
  {
    "id": "q37",
    "query": "微调阶段使用的学习率被设置为多少？",
    "answer": "1e-5"
  },
  {
    "id": "q38",
    "query": "微调后模型的验证精度大约达到多少？",
    "answer": "约 98%"
  },
  {
    "id": "q39",
    "query": "SavedModel 被保存到哪个目录？",
    "answer": "save/fine_tuning"
  },
  {
    "id": "q40",
    "query": "Android 项目中应将 model.tflite 放置到哪个 assets 路径？",
    "answer": "android/start/app/src/main/assets/"
  },
  {
    "id": "q41",
    "query": "为防止构建时压缩 .tflite 文件，需要在 build.gradle 的 aaptOptions 中设置什么？",
    "answer": "noCompress \"tflite\""
  },
  {
    "id": "q42",
    "query": "GPU 推理支持需添加的依赖坐标是哪一个？",
    "answer": "org.tensorflow:tensorflow-lite-gpu:0.0.0-nightly"
  },
  {
    "id": "q43",
    "query": "创建 TFLite 解释器时通过哪一方法设置线程数量？",
    "answer": "tfliteOptions.setNumThreads(numThreads)"
  },
  {
    "id": "q44",
    "query": "TensorFlow Lite 推理流程通常包含哪三大步骤？",
    "answer": "数据转换 (Transforming Data)、执行推理 (Running Inference)、解释输出 (Interpreting Output)"
  },
  {
    "id": "q45",
    "query": "图像预处理管道是通过哪个类构建的？",
    "answer": "ImageProcessor"
  },
  {
    "id": "q46",
    "query": "TensorFlow Lite Support Library 中用于将概率映射到标签的工具类叫什么？",
    "answer": "TensorLabel"
  },
  {
    "id": "q47",
    "query": "在 ImageProcessor 中用于旋转图像的操作类名是什么？",
    "answer": "Rot90Op"
  },
  {
    "id": "q48",
    "query": "示例延伸项目建议使用哪个模型来进行人体姿态估计？",
    "answer": "PoseNet"
  },
  {
    "id": "q49",
    "query": "克隆 TensorFlow 示例仓库的 Git 命令是什么？",
    "answer": "git clone https://github.com/tensorflow/examples.git"
  },
  {
    "id": "q50",
    "query": "在 build.gradle 中禁止压缩的文件扩展名是什么？",
    "answer": "tflite"
  },
  {
    "id": "q51",
    "query": "PoseNet 示例中，关键点置信度默认阈值被设置为多少？",
    "answer": "0.2"
  },
  {
    "id": "q52",
    "query": "调用 PoseNet 进行姿态估计时常用的函数名是什么？",
    "answer": "estimateSinglePose()"
  },
  {
    "id": "q53",
    "query": "TensorFlow Lite 标准工作流包含哪四大步骤？",
    "answer": "选择模型、转换模型、部署到设备、优化模型"
  },
  {
    "id": "q54",
    "query": "Google 提供预训练模型下载与复用的平台名称是什么？",
    "answer": "TensorFlow Hub"
  },
  {
    "id": "q55",
    "query": "TFLite Converter 输出文件一般使用什么扩展名保存？",
    "answer": ".tflite"
  },
  {
    "id": "q56",
    "query": "在设备端推理时，TensorFlow Lite API 通常避免什么以提升性能？",
    "answer": "不必要的内存复制"
  },
  {
    "id": "q57",
    "query": "TensorFlow Lite 支持在 Android 上通过哪两种语言 API 运行推理？",
    "answer": "Java 和 C++"
  },
  {
    "id": "q58",
    "query": "为了在 iOS 上使用 TFLite，可以通过哪个包管理工具集成？",
    "answer": "CocoaPods"
  },
  {
    "id": "q59",
    "query": "量化感知训练（QAT）属于 TensorFlow Lite 提供的哪类优化？",
    "answer": "量化 (Quantization)"
  },
  {
    "id": "q60",
    "query": "在模型大小与性能之间做权衡时，主要考虑哪三个维度？",
    "answer": "模型准确率、模型大小、推理速度"
  },
  {
    "id": "q61",
    "query": "MobileNet V2 微调前冻结了多少层？",
    "answer": "前 100 层"
  },
  {
    "id": "q62",
    "query": "微调 MobileNet V2 后，验证准确率约提升到多少？",
    "answer": "约 98%"
  },
  {
    "id": "q63",
    "query": "在 Android build.gradle 中添加 TensorFlow Lite 依赖时常用的版本占位符是什么？",
    "answer": "0.0.0-nightly"
  },
  {
    "id": "q64",
    "query": "ImageProcessor 预处理流水线中用于裁剪或填充至方形的操作类名是什么？",
    "answer": "ResizeWithCropOrPadOp"
  },
  {
    "id": "q65",
    "query": "TensorFlow Lite 推理结果常通过哪种数据结构（键值映射）保存标签概率？",
    "answer": "Map<String, Float>"
  },
  {
    "id": "q66",
    "query": "示例应用中使用 GPU 推理时，需要将 GpuDelegate 添加到哪个对象？",
    "answer": "Interpreter.Options"
  },
  {
    "id": "q67",
    "query": "在 TFLite 推理过程中，哪个类代表了输入/输出张量的包装？",
    "answer": "TensorImage (或 TensorBuffer)"
  },
  {
    "id": "q68",
    "query": "为了在 build.gradle 中使用国内镜像，需要替换哪两个 Maven 仓库？",
    "answer": "google() 和 jcenter()"
  },
  {
    "id": "q69",
    "query": "TensorFlow Lite 提供的 Android 示例项目中，花卉识别代码所在的 Git 路径是什么？",
    "answer": "examples/lite/codelabs/flower_classification/android/"
  },
  {
    "id": "q70",
    "query": "ImageDataGenerator 在示例中进行了哪两种主要功能？",
    "answer": "像素归一化 (rescale) 与验证集拆分 (validation_split)"
  },
  {
    "id": "q71",
    "query": "在训练花卉模型时，使用了多少个 epoch？",
    "answer": "10"
  },
  {
    "id": "q72",
    "query": "微调阶段额外训练的 epoch 数被设置为多少？",
    "answer": "5"
  },
  {
    "id": "q73",
    "query": "MobileNet V2 微调前的非可训练参数主要来源于什么？",
    "answer": "预训练的 ImageNet 权重"
  },
  {
    "id": "q74",
    "query": "Android 应用中，若要使用 GPU 加速，需要声明哪种权限或设置？",
    "answer": "无需额外权限，只需在代码中添加 GpuDelegate"
  },
  {
    "id": "q75",
    "query": "PoseNet Android 示例仓库的完整 GitHub URL 是什么？",
    "answer": "https://github.com/tensorflow/examples/tree/master/lite/examples/posenet/android"
  },
  {
    "id": "q76",
    "query": "TensorFlow.js 提供哪两大 API 层以构建模型？",
    "answer": "Core API 与 Layers API"
  },
  {
    "id": "q77",
    "query": "在浏览器环境中，TensorFlow.js 主要依赖哪项技术进行 GPU 加速？",
    "answer": "WebGL"
  },
  {
    "id": "q78",
    "query": "在 Node.js 环境中，若安装 CUDA，TensorFlow.js 可使用哪种后端进行加速？",
    "answer": "CUDA GPU 后端"
  },
  {
    "id": "q79",
    "query": "若要在 HTML 中直接加载 TensorFlow.js，应使用哪个标签引入脚本？",
    "answer": "<script> 标签"
  },
  {
    "id": "q80",
    "query": "TensorFlow.js 张量的两个核心属性分别是什么？",
    "answer": "shape（形状）和 rank（阶/维度）"
  },
  {
    "id": "q81",
    "query": "TensorFlow.js 中释放 GPU 内存常用的辅助函数是哪一个？",
    "answer": "tf.tidy()"
  },
  {
    "id": "q82",
    "query": "TensorFlow.js 的前身 DeepLearn.js 于哪一年并入 TensorFlow.js？",
    "answer": "2018 年 3 月"
  },
  {
    "id": "q83",
    "query": "浏览器端机器学习的三大优势之一是无需安装软件或驱动，请再列举其中任意一个优势。",
    "answer": "更便捷的人机交互 / 本地隐私保护 / 可直接调用手机传感器 (任列其一)"
  },
  {
    "id": "q84",
    "query": "TensorFlow.js 可以在桌面端原生应用中运行，常用的两种框架分别是？",
    "answer": "Electron 与 React Native"
  },
  {
    "id": "q85",
    "query": "通过按下浏览器快捷键 F12 可以打开什么工具来调试 TensorFlow.js 代码？",
    "answer": "开发者工具 / DevTools"
  },
  {
    "id": "q86",
    "query": "TensorFlow.js官方推荐的 CDN 服务之一用于加载脚本文件是哪个？",
    "answer": "jsDelivr (或 Google CDN 亦可)"
  },
  {
    "id": "q87",
    "query": "使用 tf.sequential 创建的模型属于哪种网络结构特点？",
    "answer": "按层线性堆叠的顺序模型"
  },
  {
    "id": "q88",
    "query": "相比 tf.sequential，tf.model API 最大的灵活性优势是什么？",
    "answer": "可构建任意非线性的计算图 (Functional API)"
  },
  {
    "id": "q89",
    "query": "TensorFlow.js 中若需手动释放单个张量的内存，可调用哪两个方法之一？",
    "answer": "tensor.dispose() 或 tf.dispose(tensor)"
  },
  {
    "id": "q90",
    "query": "tf.tidy 回调函数结束后会保留什么？",
    "answer": "回调返回值对应的张量，其他中间张量将被释放"
  },
  {
    "id": "q91",
    "query": "在浏览器控制台中输入 tf.version 主要用于检查什么？",
    "answer": "TensorFlow.js 的版本信息"
  },
  {
    "id": "q92",
    "query": "TensorFlow.js 的 Core API 提供哪三方面底层功能？",
    "answer": "张量创建、运算操作、内存管理 (等核心计算功能)"
  },
  {
    "id": "q93",
    "query": "当需要更多灵活性或无序模型结构时，TensorFlow.js 建议使用哪个 API 层？",
    "answer": "Core API 或 Functional API (tf.model)"
  },
  {
    "id": "q94",
    "query": "TensorFlow.js 可运行于 IoT 设备如 Raspberry Pi，这依赖于其对哪一平台的支持？",
    "answer": "Node.js 环境"
  },
  {
    "id": "q95",
    "query": "TensorFlow.js 的 tf.dispose 与 tf.tidy 主要解决了什么问题？",
    "answer": "GPU 内存泄露 / 不释放张量导致显存占用"
  },
  {
    "id": "q96",
    "query": "DeepLearn.js 主要基于哪项浏览器技术实现 GPU 运算？",
    "answer": "WebGL"
  },
  {
    "id": "q97",
    "query": "TensorFlow.js 可通过哪个命令行工具（打包器）与 React、Vue 等项目集成？",
    "answer": "Webpack (或 Parcel, Rollup 均可)"
  },
  {
    "id": "q98",
    "query": "在 TensorFlow.js 中，张量运算是可变还是不可变？",
    "answer": "不可变，操作返回新张量"
  },
  {
    "id": "q99",
    "query": "TensorFlow.js 数据集示例中，汽车油耗 (MPG) 与哪四个特征相关？",
    "answer": "汽缸数、加速度、马力、排量、重量 (文中列举，可任选四)"
  },
  {
    "id": "q100",
    "query": "TensorFlow.js 支持在浏览器调用手机哪些硬件传感器？请列举至少一个。",
    "answer": "GPS、摄像头、陀螺仪等"
  },
  {
    "id": "q101",
    "query": "使用 TensorFlow.js 进行汽车 MPG 回归实验的第一步是什么？",
    "answer": "加载并格式化数据"
  },
  {
    "id": "q102",
    "query": "简单线性回归模型在图形上通常表现为一条什么？",
    "answer": "直线"
  },
  {
    "id": "q103",
    "query": "示例中创建网络时使用的两个主要 TensorFlow.js 高阶 API 分别是？",
    "answer": "tf.sequential 与 tf.model"
  },
  {
    "id": "q104",
    "query": "在 TensorFlow.js 中，典型的批大小 (batch size) 被设置为多少条训练数据？",
    "answer": "32"
  },
  {
    "id": "q105",
    "query": "示例采用哪种优化器训练回归模型？",
    "answer": "Adam"
  },
  {
    "id": "q106",
    "query": "示例数据集中包含汽车的哪九个列特征？请至少列举三个。",
    "answer": "MPG、Cylinders、Displacement、Horsepower、Weight、Acceleration、Model Year、Origin、Car Name (任选三)"
  },
  {
    "id": "q107",
    "query": "TensorFlow.js 中用来打乱数据顺序的函数是？",
    "answer": "tf.util.shuffle 或 tf.data.shuffle"
  },
  {
    "id": "q108",
    "query": "为避免内存泄漏，TensorFlow.js 提供哪一个回调包装函数来自动释放中间张量？",
    "answer": "tf.tidy()"
  },
  {
    "id": "q109",
    "query": "示例中对输入和输出数据进行哪种预处理以提高训练效果？",
    "answer": "归一化 (normalization)"
  },
  {
    "id": "q110",
    "query": "在回归实验中，模型训练进行了多少次遍历所有样本 (epochs)？",
    "answer": "50"
  },
  {
    "id": "q111",
    "query": "训练完成后示例模型在测试集上大约取得了多少均方误差得分？",
    "answer": "约 0.69 (MSE)"
  },
  {
    "id": "q112",
    "query": "使用多元线性回归时，示例建议加入哪些三个主要特征？",
    "answer": "排量 (Displacement)、重量 (Weight)、马力 (Horsepower)"
  },
  {
    "id": "q113",
    "query": "手写数字识别示例中，每张 MNIST 图片尺寸是多少？",
    "answer": "28×28 像素"
  },
  {
    "id": "q114",
    "query": "MNIST 数据集中分类的目标共有多少个数字类别？",
    "answer": "10 (数字 0–9)"
  },
  {
    "id": "q115",
    "query": "TensorFlow.js 手写数字示例的四个主要步骤分别是什么？",
    "answer": "加载数据、定义模型、训练并监控、评估预测"
  },
  {
    "id": "q116",
    "query": "在 Qt Creator 中，左侧模式选择器的第一个模式通常是什么？",
    "answer": "Welcome (欢迎)"
  },
  {
    "id": "q117",
    "query": "Qt Creator 的 ‘Design’ 模式主要用于什么？",
    "answer": "设计界面 (UI) 文件"
  },
  {
    "id": "q118",
    "query": "Qt Creator 的调试按钮默认执行什么操作？",
    "answer": "启动应用并进入调试模式"
  },
  {
    "id": "q119",
    "query": "Qt 框架中，提供完整菜单栏、工具栏与状态栏的主窗口类名是什么？",
    "answer": "QMainWindow"
  },
  {
    "id": "q120",
    "query": "Qt 中轻量级对话框窗口常使用哪个类？",
    "answer": "QDialog"
  },
  {
    "id": "q121",
    "query": "Qt 信号与槽机制主要解决什么问题？",
    "answer": "对象之间的通信 (事件驱动)"
  },
  {
    "id": "q122",
    "query": "Qt 应用的入口通常需要创建什么对象来管理资源？",
    "answer": "QApplication (或 QGuiApplication)"
  },
  {
    "id": "q123",
    "query": "在 Qt HelloQT 示例中，用于显示文本的窗口部件是？",
    "answer": "QLabel"
  },
  {
    "id": "q124",
    "query": "Qt Creator 可配置的两种主要构建类型是？",
    "answer": "Debug 和 Release"
  },
  {
    "id": "q125",
    "query": "交叉编译 Qt 之前，需要先编译哪个触摸屏相关库？",
    "answer": "tslib"
  },
  {
    "id": "q126",
    "query": "在交叉编译 Qt4.7 时，配置脚本需指定的编译器前缀通常是什么？",
    "answer": "arm-linux-g++ (示例)"
  },
  {
    "id": "q127",
    "query": "Qt 的四大平台版本不包括以下哪一个？Windows、X11、macOS、Android、Embedded",
    "answer": "Android (在旧文档中未列入四大官方版本)"
  },
  {
    "id": "q128",
    "query": "Qt Quick 主要针对哪种类型的用户界面？",
    "answer": "高度动画、适合移动端的 UI"
  },
  {
    "id": "q129",
    "query": "Qt 的脚本语言用于 UI 描述与逻辑的是？",
    "answer": "QML"
  },
  {
    "id": "q130",
    "query": "Qt 的 Web 内容渲染引擎模块名称是？",
    "answer": "Qt WebKit (或 WebEngine)"
  },
  {
    "id": "q131",
    "query": "Qt 的跨平台 IDE 名称是什么？",
    "answer": "Qt Creator"
  },
  {
    "id": "q132",
    "query": "Qt Creator 分析模式中常用来检测 QML 性能的工具是？",
    "answer": "QML Profiler"
  },
  {
    "id": "q133",
    "query": "Qt 信号槽连接时，槽函数参数数量必须与信号如何对应？",
    "answer": "槽参数不能多于信号参数"
  },
  {
    "id": "q134",
    "query": "Qt 公司最初成立于哪一年？",
    "answer": "1994 年 (Trolltech)"
  },
  {
    "id": "q135",
    "query": "Qt 4.6 正式发布于哪一年？",
    "answer": "2009 年"
  },
  {
    "id": "q136",
    "query": "Qt 被 Digia 收购发生在哪一年？",
    "answer": "2012 年"
  },
  {
    "id": "q137",
    "query": "Qt 5.3 正式发布于哪一年？",
    "answer": "2014 年"
  },
  {
    "id": "q138",
    "query": "Qt Multimedia 模块主要负责什么功能？",
    "answer": "多媒体处理 (音频/视频)"
  },
  {
    "id": "q139",
    "query": "Qt Network 模块提供了哪类跨平台功能？",
    "answer": "网络通信功能"
  },
  {
    "id": "q140",
    "query": "在 Qt 中，所有窗口部件最终继承自哪个基类？",
    "answer": "QWidget"
  },
  {
    "id": "q141",
    "query": "Qt Creator 的项目 (.pro) 文件生成通常使用哪一个工具？",
    "answer": "qmake"
  },
  {
    "id": "q142",
    "query": "在使用 qmake 后，常用哪条命令编译生成 Makefile 中的目标？",
    "answer": "make (或 nmake, mingw32-make 取决于平台)"
  },
  {
    "id": "q143",
    "query": "Qt 信号槽机制底层依赖哪一套宏/元对象系统？",
    "answer": "Qt Meta-Object System (MOC)"
  },
  {
    "id": "q144",
    "query": "创建 QApplication 对象时通常传入哪两个参数？",
    "answer": "argc 与 argv (命令行参数)"
  },
  {
    "id": "q145",
    "query": "在 Qt 程序中显示窗口部件需要调用哪一个成员函数？",
    "answer": "show()"
  },
  {
    "id": "q146",
    "query": "Qt Creator ‘Help’ 模式主要用于什么？",
    "answer": "查看 Qt 官方文档与类参考"
  },
  {
    "id": "q147",
    "query": "Qt Creator 运行按钮默认执行目标的哪个构建配置？",
    "answer": "当前所选 (Debug 或 Release) 配置"
  },
  {
    "id": "q148",
    "query": "在 Qt 中，slots 关键字用于声明什么？",
    "answer": "槽函数 (可与信号连接的成员函数)"
  },
  {
    "id": "q149",
    "query": "Qt 的核心模块 ‘QtCore’ 提供哪三类基础功能？",
    "answer": "事件循环/信号槽、容器类、跨平台系统接口 (等)"
  },
  {
    "id": "q150",
    "query": "使用 Qt Designer 拖拽一个按钮到表单后，按钮对象的默认基类是什么？",
    "answer": "QPushButton"
  },
  {
    "id": "q151",
    "query": "Qt 信号槽中连接语法 connect(sender, SIGNAL(clicked()), receiver, SLOT(close())) 早期属于哪种连接方式？",
    "answer": "字符串宏旧语法"
  },
  {
    "id": "q152",
    "query": "Qt5 引入的推荐信号槽连接语法基于什么特性？",
    "answer": "函数指针 / 新语法"
  },
  {
    "id": "q153",
    "query": "在 Qt Quick 中，QML 文件通常使用什么扩展名？",
    "answer": ".qml"
  },
  {
    "id": "q154",
    "query": "Qt Creator 中的 ‘Analyze’ 模式默认提供哪两类分析工具？",
    "answer": "QML Profiler 与内存分析器"
  },
  {
    "id": "q155",
    "query": "在交叉编译流程中，安装 Qt 库到目标根文件系统的命令通常是？",
    "answer": "make install"
  },
  {
    "id": "q156",
    "query": "Qt 触摸屏驱动常用库 tslib 的 configure、make、make install 三步属于哪类构建系统流程？",
    "answer": "Autotools 标准三部曲"
  },
  {
    "id": "q157",
    "query": "Qt 默认文档是英文，若要查看中文文档可采取哪种方式？",
    "answer": "安装 Qt 帮助中文版或在线第三方翻译"
  },
  {
    "id": "q158",
    "query": "Qt Creator 中如果界面文件 (.ui) 不见，对应设计模式是否可用？",
    "answer": "不可用 (Design 按钮呈灰色)"
  },
  {
    "id": "q159",
    "query": "Qt 中用于显示富文本或 HTML 内容的窗口部件是？",
    "answer": "QTextBrowser 或 QTextEdit"
  },
  {
    "id": "q160",
    "query": "Qt 的跨平台网络库名称为？",
    "answer": "Qt Network"
  },
  {
    "id": "q161",
    "query": "Qt 开源许可证主要采用哪两种？",
    "answer": "GPL 与 LGPL"
  },
  {
    "id": "q162",
    "query": "Qt 5.15 之后长期支持 (LTS) 版本的商业支持由哪家公司提供？",
    "answer": "The Qt Company"
  },
  {
    "id": "q163",
    "query": "在 Qt 构建选项中，-prefix 参数用于指定什么？",
    "answer": "安装目录前缀"
  },
  {
    "id": "q164",
    "query": "Qt 的 moc 工具全称是什么？",
    "answer": "Meta-Object Compiler"
  },
  {
    "id": "q165",
    "query": "Qt Creator 可以通过哪种文件格式保存与管理项目？",
    "answer": ".pro (qmake) 或 .CMakeLists.txt (CMake)"
  },
  {
    "id": "q166",
    "query": "Qt 信号槽机制允许哪些线程模型下的跨线程通信？",
    "answer": "Queued Connection 支持跨线程"
  },
  {
    "id": "q167",
    "query": "在 Qt 网络模块中，常用的 TCP Socket 类名称是什么？",
    "answer": "QTcpSocket"
  },
  {
    "id": "q168",
    "query": "Qt 信号槽连接类型中，直接连接 (DirectConnection) 的特点是什么？",
    "answer": "在发送者线程立即执行槽函数"
  },
  {
    "id": "q169",
    "query": "若需要在 Qt 中播放视频，应使用哪个模块？",
    "answer": "Qt Multimedia (或 QMediaPlayer)"
  },
  {
    "id": "q170",
    "query": "Qt Quick 动画与属性绑定依赖的声明式语言是什么？",
    "answer": "QML"
  },
  {
    "id": "q171",
    "query": "Qt 公司最初名称为 Trolltech，该公司位于哪个国家？",
    "answer": "挪威"
  },
  {
    "id": "q172",
    "query": "Qt WebKit 模块已被哪个模块所替代用于现代浏览器引擎？",
    "answer": "Qt WebEngine"
  },
  {
    "id": "q173",
    "query": "在 Qt Creator 中查看类帮助文档的快捷键是什么？",
    "answer": "F1"
  },
  {
    "id": "q174",
    "query": "Qt Designer 保存的 UI 文件内部使用哪种格式？",
    "answer": "XML"
  },
  {
    "id": "q175",
    "query": "Qt 中的 QVariant 类主要解决什么问题？",
    "answer": "提供类型安全的通用数据容器 (泛型值)"
  },
  {
    "id": "q176",
    "query": "Qt Creator 调试模式下，可视化查看 QObject 层次结构的视图名称？",
    "answer": "Object Inspector"
  },
  {
    "id": "q177",
    "query": "Qt 信号槽若使用 Lambda 表达式连接，需要包含哪个头文件？",
    "answer": "无额外头文件，C++11 lambda 即可"
  },
  {
    "id": "q178",
    "query": "在 QML 中，定位元素位置常用的属性是哪些？",
    "answer": "x、y、width、height"
  },
  {
    "id": "q179",
    "query": "Qt Network 支持的高级协议类之一，用于简单 HTTP 请求的类名是什么？",
    "answer": "QNetworkAccessManager"
  },
  {
    "id": "q180",
    "query": "Qt 中的 QTimer 类主要提供什么功能？",
    "answer": "定时器 (定期触发信号)"
  },
  {
    "id": "q181",
    "query": "Qt Quick Controls 2 主要针对哪种设备性能优化？",
    "answer": "嵌入式与移动设备 (低资源)"
  },
  {
    "id": "q182",
    "query": "Qt 核心容器 QList 与 QVector 的主要区别之一是什么？",
    "answer": "QVector 采用连续内存，QList 可能分段 (Qt6 新版合并)"
  },
  {
    "id": "q183",
    "query": "Qt Creator 在 ‘Projects’ 视图可配置的三个主要选项类别是什么？",
    "answer": "Build、Run、Debug (或 Code Style, Dependencies 等)"
  },
  {
    "id": "q184",
    "query": "要在 Qt 中本地化字符串，需要使用哪个宏？",
    "answer": "tr()"
  },
  {
    "id": "q185",
    "query": "Qt Linguist 工具主要用于什么？",
    "answer": "翻译与国际化 (i18n)"
  },
  {
    "id": "q186",
    "query": "Qt 中线程安全的事件派发通常依赖于哪种信号槽连接？",
    "answer": "Queued Connection"
  },
  {
    "id": "q187",
    "query": "Qt Creator 默认生成的 main.cpp 调用了哪一个函数进入事件循环？",
    "answer": "app.exec()"
  },
  {
    "id": "q188",
    "query": "在 Qt 中加载外部 QML 文件常用的 C++ 类是哪一个？",
    "answer": "QQmlApplicationEngine"
  },
  {
    "id": "q189",
    "query": "QML 属性绑定的核心机制是什么？",
    "answer": "响应式属性变更 (依赖跟踪)"
  },
  {
    "id": "q190",
    "query": "Qt 谓词过滤模型类通常以什么后缀命名？",
    "answer": "ProxyModel (如 QSortFilterProxyModel)"
  },
  {
    "id": "q191",
    "query": "如果需要在 Qt 中绘制自定义 2D 图形，应继承哪个类？",
    "answer": "QGraphicsItem 或 QWidget 并重写 paintEvent"
  },
  {
    "id": "q192",
    "query": "Qt 使用的元对象编译器工具 moc 在构建系统中通常由哪个命令自动调用？",
    "answer": "qmake 或 CMake 用 AUTOMOC"
  },
  {
    "id": "q193",
    "query": "Qt 数据库模块名称是？",
    "answer": "Qt SQL"
  },
  {
    "id": "q194",
    "query": "在 Qt 中，QThread 的 run() 函数默认运行于哪个线程？",
    "answer": "新创建的工作线程上下文"
  },
  {
    "id": "q195",
    "query": "Qt Creator 可视化调试 QML 时，需要在项目配置中开启什么？",
    "answer": "QML Debugging (Enable QML)"
  },
  {
    "id": "q196",
    "query": "Qt Quick 动画类型之一 ‘NumberAnimation’ 主要用于什么？",
    "answer": "对数值属性进行平滑动画过渡"
  },
  {
    "id": "q197",
    "query": "Qt 中的 QPropertyAnimation 隶属于哪个模块？",
    "answer": "Qt Core (动画框架)"
  },
  {
    "id": "q198",
    "query": "跨线程发送信号时，Qt 自动采用哪种连接类型？",
    "answer": "QueuedConnection"
  },
  {
    "id": "q199",
    "query": "Qt Creator 支持哪两种主要构建系统？",
    "answer": "qmake 与 CMake"
  },
  {
    "id": "q200",
    "query": "Qt 应用国际化工作流程通常包含哪些步骤？",
    "answer": "提取字符串 (lupdate)、翻译 (Qt Linguist)、生成二进制 qm 文件 (lrelease)"
  }
]
